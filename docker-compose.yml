version: '3.8'

services:
  workflows-service:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        APP_NAME: workflows-service
    ports:
      - '3001:3001'
    volumes:
      - type: bind
        source: .
        target: /app
        consistency: cached
      - /app/node_modules
    command: npm run start:dev -- workflows-service
    environment:
      - POSTGRES_HOST=workflows-db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=workflows
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - CHOKIDAR_INTERVAL=1000
      - CHOKIDAR_DISABLE_GLOBBING=true
      - NODE_ENV=development
    depends_on:
      workflows-db:
        condition: service_healthy

  workflows-db:
    image: postgres:13.2-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=workflows
    ports:
      - '5433:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  virtual-facility:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        APP_NAME: virtual-facility
    ports:
      - '3000:3000'
    volumes:
      - type: bind
        source: .
        target: /app
        consistency: cached
      - /app/node_modules
    command: npm run start:dev -- virtual-facility
    environment:
      - POSTGRES_HOST=virtual-facility-db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=virtual-facility
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - CHOKIDAR_INTERVAL=1000
      - CHOKIDAR_DISABLE_GLOBBING=true
      - NODE_ENV=development
    depends_on:
      virtual-facility-db:
        condition: service_healthy
      workflows-service:
        condition: service_started

  virtual-facility-db:
    image: postgres:13.2-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=virtual-facility
    ports:
      - '5434:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
